#!/bin/bash

# LICENSE: GPLv2

# set -o xtrace

if [[ $1 =~ -h ]]; then
    echo -e "\e[1mUsage:\e[0m ${0##*/} [--no-tz] [<last-public-commit>]"
    exit
fi

case $1 in
    --no-tz)
	TZ=
	shift
	;;
    *)
	if [[ -d /usr/share/zoneinfo/posix/ ]]; then
	    TZ=$(find /usr/share/zoneinfo/posix/ -type f | cut -d '/' -f6,7 | shuf -n1)
	else
	    TZ=
	fi
esac

declare DATE_UTC="date -u +%s"

declare UPSTREAM BRANCH REMOTE REMOTE_HEAD
if [[ -n $1 ]]; then
    UPSTREAM=$1
else
    BRANCH=$(git branch --show-current)
    REMOTE=$(git config get "branch.${BRANCH}.remote")
    REMOTE_HEAD=$(git config get "branch.${BRANCH}.merge")
    UPSTREAM="$REMOTE${REMOTE_HEAD/#'refs/heads'/}"
fi

declare -a REVS
REVS=($(git rev-list "$UPSTREAM..@"))

declare NUM
NUM=${#REVS[@]}

declare START STOP
START=$($DATE_UTC -d "$(git log -1 --format=%aI $UPSTREAM)")
STOP=$($DATE_UTC)

declare TIMEDELTA
TIMEDELTA=$(( (STOP - START) / NUM ))

EDITOR="sed -i -e 's/^pick /edit /g'" git rebase -i $UPSTREAM

declare NEW_DATE CNAME CEMAIL
i=0
while [ $i -lt $NUM ]; do
    TS=$(( START + TIMEDELTA * (i + 1) ))
    NEW_DATE=$(TZ="$TZ" date -d "@$TS")
    CNAME="$(git log -1 --format=%cN)"
    CEMAIL="$(git log -1 --format=%cE)"
    GIT_COMMITTER_NAME="$CNAME" \
		      GIT_COMMITTER_EMAIL="$CEMAIL" \
		      GIT_COMMITTER_DATE="$NEW_DATE" \
		      git commit --amend --no-edit --date="$NEW_DATE"
    git rebase --continue
    i=$(( i + 1 ))
done
